{"version":3,"sources":["../src/dat/index.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat2.js","../node_modules/gl-matrix/esm/mat2d.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/quat2.js","../node_modules/gl-matrix/esm/vec2.js","../node_modules/gl-matrix/esm/index.js","../node_modules/twgl.js/dist/4.x/twgl-full.js","shader/fragment.glsl","shader/vertex.glsl","main.ts"],"names":["color","forceCSSHex","colorFormat","__state","conversionName","toString","r","Math","round","g","b","a","h","s","toFixed","v","str","hex","length","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","target","each","call","arguments","obj","isObject","Object","keys","key","isUndefined","bind","toCall","args","i","apply","itr","scope","l","BREAK","fnc","func","threshold","callImmediately","timeout","callNow","setTimeout","delayed","toArray","undefined","isNaN","isArray","constructor","INTERPRETATIONS","common","isString","original","test","match","parseInt","parseFloat","isNumber","result","toReturn","interpret","family","litmus","conversions","conversion","read","tmpComponent","ColorMath","hi","floor","f","p","q","t","c","min","max","delta","NaN","hex_with_component","componentIndex","value","Color","Error","colorToString","write","defineRGBComponent","component","componentHexIndex","defineProperty","space","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","object","property","initialValue","domElement","document","createElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP","EVENT_MAP_INV","k","e","CSS_VALUE_PIXELS","cssValueToPixels","val","isNull","dom","elem","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vert","vertical","horizontal","position","left","right","top","bottom","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","defaults","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","event","newBool","bool","addEventListener","attachEvent","removeEventListener","detachEvent","classes","split","indexOf","push","join","replace","removeAttribute","index","splice","RegExp","getComputedStyle","width","height","el","offset","offsetParent","offsetLeft","offsetTop","activeElement","type","href","BooleanController","_this","__prev","__checkbox","setAttribute","onChange","setValue","appendChild","checked","OptionController","opts","options","__select","map","element","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","_x","NumberController","_params","__min","__max","__step","step","__impliedStep","pow","log","abs","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","unbind","attempted","onMouseDown","i1","i2","o1","o2","NumberControllerSlider","preventDefault","bgRect","__background","getBoundingClientRect","onTouchMove","touches","onTouchEnd","__foreground","onTouchStart","addClass","pct","FunctionController","text","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","setSV","fieldUpSV","fieldDownH","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","background","vendor","cssText","hueGradient","css","url","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","requestAnimationFrame","callback","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","body","hide","display","opacity","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","load","preset","parent","hideable","resizable","scrollable","useLocalStorage","root","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","defineProperties","closeOnTop","getRoot","revert","name","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","stringify","getSaveObject","saveToLocalStorageIfPossible","gui","newDom","liBefore","li","removeListeners","markPresetModified","modified","__preset_select","augmentController","controller","__li","__gui","nextSibling","nextElementSibling","add","remove","firstElementChild","listen","box","method","pc","pb","returned","oldName","wasListening","newController","compose","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","remembered","presetMap","factoryArgs","concat","before","container","CLASS_CONTROLLER_ROW","location","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","__save_row","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","newConstructorTextArea","which","show","focus","save","presetName","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","setWidth","w","getCurrentPreset","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","toggleHide","CLASS_TOO_TALL","_keydownHandler","removeChild","subfolder","removeFolder","newGuiParams","folders","folder","parentElement","getOffset","node","offsetHeight","debounce","saveDialogueContents","controllers","domImport","GUIImport","EPSILON","ARRAY_TYPE","Float32Array","RANDOM","random","setMatrixArrayType","degree","PI","toRadian","equals","hypot","sqrt","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","scale","v0","v1","fromRotation","fromScaling","frob","LDU","L","D","U","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","fromMat2d","fromQuat","z","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","divide","ceil","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","acos","zero","dist","sqrDist","sqrLen","vec","stride","count","fn","arg","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2","module","exports"],"mappings":"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","file":"main.3a09fa3d.js","sourceRoot":"../src","sourcesContent":["/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return Object.prototype.toString.call(obj) === '[object Function]';\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (!this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","/*!\n * @license twgl.js 4.11.2 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/twgl-full.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/attributes.js\":\n/*!***************************!*\\\n  !*** ./src/attributes.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(\"Can not guess numComponents for attribute '\".concat(name, \"'. Tried \").concat(numComponents, \" but \").concat(length, \" values is not evenly divisible by \").concat(numComponents, \". You should specify it.\"));\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n\n      if (array.value) {\n        if (!Array.isArray(array.value) && !typedArrays.isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n\n        attribs[attribName] = {\n          value: array.value\n        };\n      } else {\n        var buffer;\n        var type;\n        var normalization;\n        var numComponents;\n\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          var numValues = array.data || array;\n          var arrayType = array.type || Float32Array;\n          var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n        } else {\n          var typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = typedArrays.getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n\n        attribs[attribName] = {\n          buffer: buffer,\n          numComponents: numComponents,\n          type: type,\n          normalize: normalization,\n          stride: array.stride || 0,\n          offset: array.offset || 0,\n          divisor: array.divisor === undefined ? undefined : array.divisor,\n          drawType: array.drawType\n        };\n      }\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n} // Tries to get the number of elements from a set of arrays.\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw new Error(\"numComponents \".concat(numComponents, \" not correct for length \").concat(length));\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw new Error(\"numComponents \".concat(numComponents, \" not correct for length \").concat(length));\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoords: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  var newAttribs = createAttribsFromArrays(gl, arrays);\n  var bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n\n/***/ \"./src/draw.js\":\n/*!*********************!*\\\n  !*** ./src/draw.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n\n/***/ \"./src/framebuffers.js\":\n/*!*****************************!*\\\n  !*** ./src/framebuffers.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(/*! ./textures.js */ \"./src/textures.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibility they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(target, attachmentPoint, attachment, attachmentOptions.level || 0, attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n\n/***/ \"./src/helper.js\":\n/*!***********************!*\\\n  !*** ./src/helper.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = typeof console !== 'undefined' && console.error && typeof console.error === \"function\" ? console.error.bind(console) : function () {};\nexports.error = error;\nvar warn = typeof console !== 'undefined' && console.warn && typeof console.warn === \"function\" ? console.warn.bind(console) : function () {};\nexports.warn = warn;\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && t instanceof WebGLRenderbuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && t instanceof WebGLSampler;\n}\n\n/***/ }),\n\n/***/ \"./src/m4.js\":\n/*!*******************!*\\\n  !*** ./src/m4.js ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none, a new one is created.\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none, a new one is created.\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result\n * @return {module:twgl/v3.Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result\n * @return {module:twgl/v3.Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n\n/***/ \"./src/primitives.js\":\n/*!***************************!*\\\n  !*** ./src/primitives.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCrescentVertices = createCrescentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCrescentBuffers = exports.createCrescentBufferInfo = exports.createCresentVertices = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(/*! ./attributes.js */ \"./src/attributes.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(/*! ./m4.js */ \"./src/m4.js\"));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returning a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u + opt_startLongitudeInRadians;\n      var phi = latRange * v + opt_startLatitudeInRadians;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCrescentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vColors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augmented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a full spec make new one a full spec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nexports.createCrescentBufferInfo = createCrescentBufferInfo;\nvar createCrescentBuffers = createBufferFunc(createCrescentVertices);\nexports.createCrescentBuffers = createCrescentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices); // these were mis-spelled until 4.12\n\nexports.createDiscBuffers = createDiscBuffers;\nvar createCresentBufferInfo = createCrescentBufferInfo;\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createCrescentBuffers;\nexports.createCresentBuffers = createCresentBuffers;\nvar createCresentVertices = createCrescentVertices;\nexports.createCresentVertices = createCresentVertices;\n\n/***/ }),\n\n/***/ \"./src/programs.js\":\n/*!*************************!*\\\n  !*** ./src/programs.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = typeof document !== 'undefined' && document.getElementById ? document.getElementById.bind(document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.UNSIGNED_INT, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: uintAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw new Error(\"unknown script element: \".concat(scriptId));\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n\n  if (!shaderType) {\n    throw new Error('unknown shader type');\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw new Error(\"unknown type: 0x\".concat(type.toString(16))); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var aNdx = 1; aNdx < numArgs; ++aNdx) {\n    var _values = arguments[aNdx];\n\n    if (Array.isArray(_values)) {\n      var numValues = _values.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, _values[ii]);\n      }\n    } else {\n      for (var name in _values) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(_values[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n\n/***/ \"./src/textures.js\":\n/*!*************************!*\\\n  !*** ./src/textures.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.canGenerateMipmap = canGenerateMipmap;\nexports.canFilter = canFilter;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\nexports.getFormatAndTypeForInternalFormat = getFormatAndTypeForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = typeof document !== 'undefined' && document.createElement ? document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1],\n    type: [UNSIGNED_BYTE]\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [1],\n    type: [BYTE]\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT]\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [1],\n    type: [UNSIGNED_BYTE]\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [1],\n    type: [BYTE]\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [UNSIGNED_SHORT]\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [SHORT]\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT]\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [INT]\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [2],\n    type: [BYTE]\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [FLOAT]\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [BYTE]\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [SHORT]\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [UNSIGNED_INT]\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [INT]\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [BYTE]\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [FLOAT]\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [3],\n    type: [BYTE]\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [6],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [6],\n    type: [SHORT]\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [UNSIGNED_INT]\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [INT]\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [BYTE]\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [FLOAT]\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [BYTE]\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [SHORT]\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [INT]\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [UNSIGNED_INT]\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT]\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_24_8]\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT_32_UNSIGNED_INT_24_8_REV]\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n    info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n      var type = info.type[ndx];\n      info.bytesPerElementMap[type] = bytesPerElement;\n    });\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: info.type[0]\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\n\n\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    var a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname && a.port === location.port && a.protocol === location.protocol;\n  } else {\n    var localOrigin = new URL(location.href).origin;\n    var urlOrigin = new URL(url, location.href).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url) ? 'anonymous' : crossOrigin;\n}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\n\n\nfunction isTexImageSource(obj) {\n  return typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap || typeof ImageData !== 'undefined' && obj instanceof ImageData || typeof HTMLElement !== 'undefined' && obj instanceof HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n}\n\n/***/ }),\n\n/***/ \"./src/twgl-full.js\":\n/*!**************************!*\\\n  !*** ./src/twgl-full.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(/*! ./m4.js */ \"./src/m4.js\"));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(/*! ./primitives.js */ \"./src/primitives.js\"));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(/*! ./twgl.js */ \"./src/twgl.js\");\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n\n/***/ \"./src/twgl.js\":\n/*!*********************!*\\\n  !*** ./src/twgl.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true,\n  attributes: true,\n  textures: true,\n  utils: true,\n  draw: true,\n  framebuffers: true,\n  programs: true,\n  typedarrays: true,\n  vertexArrays: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\nexports.vertexArrays = exports.typedarrays = exports.programs = exports.framebuffers = exports.draw = exports.utils = exports.textures = exports.attributes = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(/*! ./attributes.js */ \"./src/attributes.js\"));\n\nexports.attributes = attributes;\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(/*! ./textures.js */ \"./src/textures.js\"));\n\nexports.textures = textures;\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nexports.utils = utils;\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar draw = _interopRequireWildcard(__webpack_require__(/*! ./draw.js */ \"./src/draw.js\"));\n\nexports.draw = draw;\nObject.keys(draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = draw[key];\n});\n\nvar framebuffers = _interopRequireWildcard(__webpack_require__(/*! ./framebuffers.js */ \"./src/framebuffers.js\"));\n\nexports.framebuffers = framebuffers;\nObject.keys(framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = framebuffers[key];\n});\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nexports.programs = programs;\nObject.keys(programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = programs[key];\n});\n\nvar typedarrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nexports.typedarrays = typedarrays;\nObject.keys(typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = typedarrays[key];\n});\n\nvar vertexArrays = _interopRequireWildcard(__webpack_require__(/*! ./vertex-arrays.js */ \"./src/vertex-arrays.js\"));\n\nexports.vertexArrays = vertexArrays;\nObject.keys(vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n\n/***/ \"./src/typedarrays.js\":\n/*!****************************!*\\\n  !*** ./src/typedarrays.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw new Error('unsupported typed array type');\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw new Error('unsupported typed array type');\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = typeof SharedArrayBuffer !== 'undefined' ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n\n/***/ \"./src/utils.js\":\n/*!**********************!*\\\n  !*** ./src/utils.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n\n/***/ \"./src/v3.js\":\n/*!*******************!*\\\n  !*** ./src/v3.js ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.lerpV = lerpV;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.max = max;\nexports.min = min;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n  return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n  return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n  return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n\n/***/ \"./src/vertex-arrays.js\":\n/*!******************************!*\\\n  !*** ./src/vertex-arrays.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n\n/******/ });\n});\n","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform int maxSteps;\\nuniform float minDist;\\nuniform float maxDist;\\nuniform float epsilon;\\nuniform vec2 resolution;\\nuniform int subSamples;\\nuniform float FOV;\\nuniform vec3 cameraPos;\\nuniform mat4 rotationMatrix;\\nuniform vec3 lightPos;\\nuniform vec3 objectPos;\\nuniform vec3 objectColour;\\nuniform vec3 worldColour;\\nuniform float worldColourFactor;\\nuniform float diffuseFactor;\\nuniform float specularFactor;\\nuniform float ambientMin;\\nuniform float specularPower;\\nuniform int maxIterations;\\nuniform float fractalPower;\\n\\nfloat sphereSDF(vec3 samplePoint, float radius) {\\n  return length(samplePoint - objectPos) - radius;\\n}\\n\\nfloat mandelbulbSDF(vec3 samplePoint) {\\n  vec3 c = samplePoint - objectPos;\\n  vec3 z = c;\\n  float dr = 1.0;\\n  float r = 0.0;\\n\\n  for (int i = 0; i < 10000; i++) {\\n    if (i == maxIterations) break;\\n    r = length(z);\\n    if (r > 2.0) break;\\n    float theta = acos(z.z / r);\\n    float phi = atan(z.y, z.x);\\n    dr = pow(r, fractalPower - 1.0) * fractalPower * dr + 1.0;\\n\\n    float zr = pow(r, fractalPower);\\n    theta = theta * fractalPower;\\n    phi = phi * fractalPower;\\n\\n    z = zr * vec3(sin(theta) * cos(phi), sin(phi) * sin(theta), cos(theta));\\n    z += c;\\n  }\\n  return 0.5 * log(r) * r / dr;\\n}\\n\\nfloat sceneSDF(vec3 samplePoint) {\\n  // return sphereSDF(samplePoint, 1.0);\\n  return mandelbulbSDF(samplePoint);\\n}\\n\\nfloat distToScene(vec3 dir) {\\n  float depth = minDist;\\n  for (int i = 0; i < 10000; i++) {\\n    if (i == maxSteps) return maxDist;\\n    float dist = sceneSDF(cameraPos + depth * dir);\\n    if (dist < epsilon) return depth;\\n    depth += dist;\\n    if (depth >= maxDist) return maxDist;\\n  }\\n}\\n\\nvec3 calcDir(vec2 pixelPos) {\\n  vec2 point = 2.0 * (pixelPos / resolution) - 1.0;\\n  point *= tan(radians(FOV / 2.0)) * vec2(resolution.x / resolution.y, 1);\\n  vec3 dir = vec3(point, -1.0);\\n  vec4 dirRotated = rotationMatrix * vec4(dir, 1.0);\\n  return normalize(dirRotated.xyz);\\n}\\n\\nvec3 estimateNormal(vec3 p) {\\n  return normalize(vec3(\\n    sceneSDF(vec3(p.x + epsilon, p.y, p.z)) - sceneSDF(vec3(p.x - epsilon, p.y, p.z)),\\n    sceneSDF(vec3(p.x, p.y + epsilon, p.z)) - sceneSDF(vec3(p.x, p.y - epsilon, p.z)),\\n    sceneSDF(vec3(p.x, p.y, p.z + epsilon)) - sceneSDF(vec3(p.x, p.y, p.z - epsilon))\\n  ));\\n}\\n\\nvec3 calcPhong(vec3 hitPoint) {\\n  vec3 normal = estimateNormal(hitPoint);\\n  vec3 toLight = normalize(lightPos - hitPoint);\\n  vec3 toCamera = normalize(cameraPos - hitPoint);\\n  vec3 lightReflected = 2.0 * dot(normal, toLight) * normal - toLight;\\n  float diffuse = diffuseFactor * clamp(dot(normal, toLight), ambientMin, 1.0);\\n  float specular = specularFactor * pow(clamp(dot(toCamera, lightReflected), 0.0, 1.0), specularPower);\\n  return (objectColour / vec3(255)) * diffuse + vec3(1.0) * specular;\\n}\\n\\nvec3 rayMarch(vec2 pixelPos) {\\n  vec3 dir = calcDir(pixelPos);\\n  float dist = distToScene(dir);\\n  if (dist >= maxDist) {\\n    return worldColourFactor * worldColour / vec3(255);\\n  } else {\\n    vec3 hitPoint = cameraPos + dist * dir;\\n    return calcPhong(hitPoint);\\n  }\\n}\\n\\nvoid main() {\\n  vec3 colour = vec3(0.0);\\n  vec2 pixelSize = vec2(1, resolution.x / resolution.y);\\n  for (int i = 0; i < 10000; i++) {\\n    if (i == subSamples) break;\\n    colour += rayMarch(gl_FragCoord.xy + vec2(i) * (pixelSize / vec2(subSamples + 1)));\\n  }\\n  gl_FragColor = vec4(colour / vec3(subSamples), 1.0);\\n}\\n\\n\";","module.exports=\"#define GLSLIFY 1\\nattribute vec4 position;\\n\\nvoid main() {\\n  gl_Position = position;\\n}\\n\";","import * as dat from 'dat.gui';\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport * as twgl from 'twgl.js';\n\n// @ts-ignore\nimport fragmentSource from './shader/fragment.glsl';\n// @ts-ignore\nimport vertexSource from './shader/vertex.glsl';\n\nconst cnv = document.createElement('canvas');\nconst gl = cnv.getContext('webgl');\ndocument.body.appendChild(cnv);\n\nconst programInfo = twgl.createProgramInfo(gl, [vertexSource, fragmentSource]);\nconst vertices = [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0];\nconst arrays = { position: vertices };\nconst bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n\nconst state = {\n  isMoving: false,\n  isRotating: false,\n  highRes: false,\n  movingScale: 6,\n  xRotMax: 90,\n  mouseSens: 0.0015,\n  movementSpeed: 0.05,\n  keyStates: { w: false, a: false, s: false, d: false },\n  rotation: vec2.create(),\n  controllers: [],\n};\n\nconst uniforms = {\n  maxSteps: 200,\n  minDist: 0,\n  maxDist: 50,\n  epsilon: 0.0001,\n  resolution: vec2.create(),\n  subSamples: 4,\n  FOV: 45,\n  cameraPos: vec3.fromValues(0, 0, 0),\n  rotationMatrix: mat4.create(),\n  lightPos: vec3.fromValues(5, 5, 5),\n  objectPos: vec3.fromValues(0, 0, -3),\n  objectColour: [246, 189, 120],\n  worldColour: [72, 92, 120],\n  worldColourFactor: 0.5,\n  diffuseFactor: 1,\n  specularFactor: 0.2,\n  ambientMin: 0.2,\n  specularPower: 10,\n  maxIterations: 10,\n  fractalPower: 8,\n};\n\nfunction updateRotation() {\n  const xRotMatrix = mat4.create();\n  const yRotMatrix = mat4.create();\n  mat4.fromXRotation(xRotMatrix, state.rotation[0]);\n  mat4.fromYRotation(yRotMatrix, state.rotation[1]);\n  mat4.multiply(uniforms.rotationMatrix, yRotMatrix, xRotMatrix);\n}\n\nfunction updatePosition() {\n  const forward = vec3.fromValues(0, 0, -1);\n  const right = vec3.create();\n  const up = vec3.create();\n  vec3.transformMat4(forward, forward, uniforms.rotationMatrix);\n  vec3.cross(right, forward, [0, 1, 0]);\n  vec3.cross(up, right, forward);\n  vec3.normalize(forward, forward);\n  vec3.normalize(right, right);\n  vec3.scale(forward, forward, state.movementSpeed);\n  vec3.scale(right, right, state.movementSpeed);\n\n  if (state.keyStates.w) {\n    vec3.add(uniforms.cameraPos, uniforms.cameraPos, forward);\n  }\n  if (state.keyStates.a) {\n    vec3.subtract(uniforms.cameraPos, uniforms.cameraPos, right);\n  }\n  if (state.keyStates.s) {\n    vec3.subtract(uniforms.cameraPos, uniforms.cameraPos, forward);\n  }\n  if (state.keyStates.d) {\n    vec3.add(uniforms.cameraPos, uniforms.cameraPos, right);\n  }\n\n  vec3.multiply(uniforms.cameraPos, uniforms.cameraPos, [1, 0, 1]);\n}\n\nfunction update() {\n  renderLogic();\n  requestAnimationFrame(update);\n}\n\nfunction renderLogic() {\n  if (state.isMoving || state.isRotating) {\n    if (state.highRes) {\n      setCanvasSize(state.movingScale);\n      state.highRes = false;\n    }\n    updateRotation();\n    updatePosition();\n    render();\n  } else if (!state.highRes) {\n    setCanvasSize(1);\n    render();\n    state.highRes = true;\n  }\n}\n\nfunction render() {\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n  gl.useProgram(programInfo.program);\n  twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  twgl.setUniforms(programInfo, uniforms);\n  twgl.drawBufferInfo(gl, bufferInfo);\n}\n\nfunction setCanvasSize(scl: number) {\n  cnv.width = window.innerWidth / scl;\n  cnv.height = window.innerHeight / scl;\n  uniforms.resolution = vec2.fromValues(cnv.width, cnv.height);\n  cnv.style.width = '100vw';\n  cnv.style.height = '100vh';\n}\n\nfunction configureGui() {\n  const gui = new dat.GUI();\n  const control = gui.addFolder('Control');\n  control.add(state, 'xRotMax', 1, 90);\n  control.add(state, 'mouseSens', 0, 0.005);\n  control.add(state, 'movementSpeed', 0, 0.5);\n  const rendering = gui.addFolder('Rendering');\n  state.controllers.push(rendering.add(state, 'movingScale', 1, 10, 1));\n  state.controllers.push(rendering.add(uniforms, 'subSamples', 1, 10, 1));\n  state.controllers.push(rendering.add(uniforms, 'FOV', 1, 179));\n  const shading = gui.addFolder('Shading');\n  state.controllers.push(shading.addColor(uniforms, 'objectColour'));\n  state.controllers.push(shading.addColor(uniforms, 'worldColour'));\n  state.controllers.push(shading.add(uniforms, 'worldColourFactor', 0, 1));\n  state.controllers.push(shading.add(uniforms, 'diffuseFactor', 0, 1));\n  state.controllers.push(shading.add(uniforms, 'specularFactor', 0, 1));\n  state.controllers.push(shading.add(uniforms, 'ambientMin', 0, 1));\n  state.controllers.push(shading.add(uniforms, 'specularPower', 1, 50));\n  const fractal = gui.addFolder('Fractal');\n  state.controllers.push(fractal.add(uniforms, 'maxIterations', 1, 100, 1));\n  state.controllers.push(fractal.add(uniforms, 'fractalPower', 1, 20));\n  for (const controller of state.controllers) {\n    controller.onFinishChange(render);\n  }\n}\n\nfunction handleKey(e: KeyboardEvent) {\n  if (!e.repeat) {\n    state.isMoving = false;\n    for (const key of Object.keys(state.keyStates)) {\n      if (e.key === key) {\n        state.keyStates[key] = !state.keyStates[key];\n      }\n      state.isMoving = state.isMoving || state.keyStates[key] === true;\n    }\n  }\n}\n\nfunction handleClick() {\n  cnv.requestPointerLock();\n}\n\nfunction handleMouseMove(e: MouseEvent) {\n  if (document.pointerLockElement === cnv) {\n    state.isRotating = !(e.movementX === 0 && e.movementY === 0);\n    const movement = vec2.fromValues(-e.movementY, -e.movementX);\n    const factor = state.mouseSens * uniforms.FOV * (Math.PI / 180);\n    vec2.scale(movement, movement, factor);\n    vec2.add(state.rotation, state.rotation, movement);\n    const lim = state.xRotMax * (Math.PI / 180);\n    state.rotation[0] = Math.min(Math.max(-lim, state.rotation[0]), lim);\n  }\n}\n\nfunction handleResize() {\n  state.highRes = false;\n  setCanvasSize(state.movingScale);\n  renderLogic();\n}\n\ndocument.addEventListener('keydown', handleKey);\ndocument.addEventListener('keyup', handleKey);\ndocument.addEventListener('mousemove', handleMouseMove);\nwindow.addEventListener('resize', handleResize);\ncnv.addEventListener('click', handleClick);\n\nconfigureGui();\nrequestAnimationFrame(update);\n"]}